#!/usr/bin/python
# -*- coding: utf-8 -*-

import optparse
import re
import csv
import xml.etree.cElementTree as etree

import sys
reload(sys)
sys.setdefaultencoding("utf_8")


def searchdict(word,dict):

    pattern=re.compile(u"\\b"+word+u"\\b",re.U | re.IGNORECASE)

    hits=[]
    index=0
    for (lang1,lang2) in dict:
        result1=pattern.search(lang1)
        result2=pattern.search(lang2)

        if result1 is not None or result2 is not None:
            hits.append(index)

        index += 1

    for hit in hits:
        print dict[hit][0]," <=> ", dict[hit][1]

def main():
    parser = optparse.OptionParser()
    parser.usage = """A program for searching words in a dictionary (CSV format) generated by generatedict.py ."""
    parser.add_option("-i", "--in", dest="filein", help="dictionary file (CSV)", metavar="INFILE")

    (options, args) = parser.parse_args()

    if options.filein is None:
        parser.error("Missing input file!")

    try:
        # "rb" : readable, binary file (just reading a stream of bytes, no decoding)
        filein=open(options.filein, "rb")
        dictReader=csv.reader(filein)

        dictionary=[]

        for row in dictReader:
            dictionary.append((unicode(row[0]),unicode(row[1])))

        word=raw_input("Enter word to translate: ")

        searchdict(word,dictionary)
    except IOError:
        print "Cannot read from ", options.filein


if __name__ == "__main__":
    # when one "executes" a python program, it's __name__ is
    # __main__, otherwise it's name will be the module name
    main()
